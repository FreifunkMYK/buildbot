# -*- python -*-
# ex: set syntax=python:

#Workers have to be set up with "--umask=0o22" and pre-cloned site-repo

import datetime
from buildbot.plugins import *
from buildbot.www.authz import Authz
from buildbot.www.auth import UserPasswordAuth
from buildbot.www.authz.roles import RolesFromGroups, RolesFromUsername
from buildbot.www.authz.endpointmatchers import AnyControlEndpointMatcher
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter

c = BuildmasterConfig = {}

####### CONFIG FFMYK
arch    = ['ar71xx-generic', 'ar71xx-nand', 'ar71xx-tiny', 'brcm2708-bcm2708', 'brcm2708-bcm2709', 'ipq40xx', 'mpc85xx-generic', 'ramips-mt7620', 'ramips-mt7621', 'ramips-mt76x8', 'ramips-rt305x', 'sunxi-cortexa7', 'x86-generic', 'x86-geode', 'x86-64', 'ar71xx-mikrotik', 'brcm2708-bcm2710', 'ipq806x', 'mvebu-cortexa9'];

####### BUILDSLAVES

c['protocols'] = {'pb': {'port': 9989}}

#c['services'].append(reporters.IRC(host="irc.hackint.org", nick="ffmyk-nightly",
#                                   channels=["#ffmyk-dev"]))

c['workers'] = []
c['workers'].append(worker.Worker('localhost', '***'))

####### CHANGESOURCES

from buildbot.changes.gitpoller import GitPoller
c['change_source'] = []
c['change_source'].append(GitPoller(
    'git://github.com/freifunk-gluon/gluon',
    workdir='gitpoller-workdir', branch='master',
    pollinterval=300))

c['change_source'].append(GitPoller(
        'git://github.com/FreifunkMYK/sites-ffmyk',
        workdir='gitpoller-workdir', branch='master',
        pollinterval=300))

####### SCHEDULERS

c['schedulers'] = []
c['schedulers'].append(SingleBranchScheduler(
    name="all",
    change_filter=filter.ChangeFilter(branch='master'),
    treeStableTimer=None,
    builderNames=["runtests"]))
c['schedulers'].append(ForceScheduler(
    name="force",
    builderNames=["runtests"]))

####### BUILDSTEPS

from buildbot.process.factory import BuildFactory
from buildbot.steps.source.git import Git
from buildbot.steps.shell import ShellCommand

factory = BuildFactory()

factory.addStep(ShellCommand(name = "Fetching site.conf repository",
    command = ["git", "pull"],
    haltOnFailure = True,
    description = "Fetch Site"))

factory.addStep(ShellCommand(name = "Loading submodules",
    command = ["git", "submodule", "update", "--init"],
    haltOnFailure = True,
    description = "Load submodule"))

factory.addStep(ShellCommand(name = "Switching to gluon master",
    workdir = "build/gluon",
    command = ["git", "checkout", "master"],
    haltOnFailure = True,
    description = "Switch submodule"))

factory.addStep(ShellCommand(name = "Updating gluon master",
    workdir = "build/gluon",
    command = ["git", "pull"],
    haltOnFailure = True,
    description = "Pull submodule"))


factory.addStep(steps.RemoveDirectory(name = "Deleting previous output directory" , dir="output"))
factory.addStep(steps.MakeDirectory(name = "Creating new output directory", dir="output"))

factory.addStep(ShellCommand(name = "Starting Build",
    command = ["bash", "build.sh", "ffmyk-nightly-"+str(datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")), ' '.join(arch)],
    haltOnFailure = True,
    description = "Build",
    env={'BROKEN': '1'}
))

factory.addStep(ShellCommand(name = "Upload",
    command = ["/usr/local/bin/ffmyk-upload.sh"],
    haltOnFailure = True,
    description = "Upload"))

factory.addStep(ShellCommand(name = "Cleanup Disk",
    command = ["/usr/local/bin/ffmyk-cleanup.sh"],
    haltOnFailure = False,
    description = "Cleaning Disk"))

####### BUILDERS
from buildbot.config import BuilderConfig

c['builders'] = [util.BuilderConfig(
    name = 'runtests',
    workernames = ['localhost'],
    factory = factory
)]

####### STATUS
c['www'] = {
        'port': 8080,
        'plugins': dict(
                waterfall_view={},
                console_view={}
        ),
        'auth': util.UserPasswordAuth([('***', '***')]),
        'authz': util.Authz(
                allowRules = [
                    util.AnyEndpointMatcher(role="admins")
                ],
                roleMatchers = [
                    util.RolesFromUsername(roles=['admins'], usernames=['***'])
                ]
        )
}

####### IDENTITY
c['title'] = "Gluon-FFMYK"
c['titleURL'] = "https://freifunk-myk.de/"
#c['buildbotURL'] = "http://[2a03:2260:1016:302:20c:29ff:fe7d:e3c3]/buildbot/"
c['buildbotURL'] = "http://127.0.0.1:8881/"

####### DB
c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
