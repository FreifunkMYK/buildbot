# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

####### CONFIG FFMYK
sites = ['my', 'ko', 'aw', 'sim', 'coc', 'ems'];
broken = [0, 1];
arch    = ['ar71xx-generic', 'ar71xx-tiny', 'ar71xx-nand', 'brcm2708-bcm2708', 'brcm2708-bcm2709', 'mpc85xx-generic', 'ramips-mt7621', 'x86-generic', 'x86-geode', 'x86-64'];
arch_br = ['ar71xx-mikrotik', 'brcm2708-brcm2710', 'ipq806x', 'mvebu', 'ramips-mt7620', 'ramips-mt7628', 'ramips-rt305x', 'sunxi'];

####### BUILDSLAVES

from buildbot.buildslave import BuildSlave
c['slaves'] = [BuildSlave("localhost", "************")]
c['protocols'] = {'pb': {'port': 9989}}

####### CHANGESOURCES

from buildbot.changes.gitpoller import GitPoller
c['change_source'] = []
c['change_source'].append(GitPoller(
    'git://github.com/freifunk-gluon/gluon',
    workdir='gitpoller-workdir', branch='master',
    pollinterval=300))

c['change_source'].append(GitPoller(
	'git://github.com/FreifunkMYK/sites-ffmyk',
	workdir='gitpoller-workdir', branch='master',
	pollinterval=300))

####### SCHEDULERS

from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter

from buildbot.steps.slave import RemoveDirectory
from buildbot.steps.slave import MakeDirectory

c['schedulers'] = []
c['schedulers'].append(SingleBranchScheduler(
    name="all",
    change_filter=filter.ChangeFilter(branch='master'),
    treeStableTimer=None,
    builderNames=["runtests"]))
c['schedulers'].append(ForceScheduler(
    name="force",
    builderNames=["runtests"]))

####### BUILDSTEPS

from buildbot.process.factory import BuildFactory
from buildbot.steps.source.git import Git
from buildbot.steps.shell import ShellCommand

factory = BuildFactory()

factory.addStep(ShellCommand(name = "Fetching Gluon",
    command = ["git", "pull"],
    haltOnFailure = True,
    description = "Fetch Gluon"))

factory.addStep(ShellCommand(name = "Fetching site.conf repository",
    workdir = "build/site.repo",
    command = ["git", "pull"],
    haltOnFailure = True,
    description = "Fetch Site"))

for brk in broken:
    for site in sites:
        factory.addStep(ShellCommand(name = "Patching site.conf (%s, BROKEN=%s)" % (site, brk),
            workdir = "build/site",
            command = ["/usr/local/bin/ffmyk-patch-site.sh", site],
            haltOnFailure = True,
            description = "Patching site.conf for site %s to reflect current release" % site))

        factory.addStep(RemoveDirectory(name = "Deleting previous output directory in preparation for site=%s BROKEN=%s" % (site, brk), dir="build/output/"))
        factory.addStep(MakeDirectory(name = "Creating new output directory in preparation for site=%s BROKEN=%s" % (site, brk), dir="build/output"))

        factory.addStep(ShellCommand(name = "Updating Packages for site %s, BROKEN=%s" % (site, brk),
            command = ["make", "update", "-j16", "BROKEN=%s" %brk],
            haltOnFailure = True,
            description = "make update",
            env={'GLUON_BRANCH': 'nightly', 'GLUON_LANGS': 'de en'}))

        for ar in arch:
            factory.addStep(ShellCommand(name = "Building for site %s, BROKEN=%s, arch=%s" % (site, brk, ar),
                command = ["make", "V=s", "-j16"],
                haltOnFailure = True,
                env={'GLUON_BRANCH': 'nightly', 'GLUON_LANGS': 'de en', 'GLUON_TARGET': ar}))
        if brk == 1:
            for ar in arch_br:
                factory.addStep(ShellCommand(name = "Building for site %s, BROKEN=%s, arch=%s" % (site, brk, ar),
                    command = ["make", "V=s", "-j16"],
                    haltOnFailure = True,
                    env={'GLUON_BRANCH': 'nightly', 'GLUON_LANGS': 'de en', 'GLUON_TARGET': ar, 'BROKEN': '1'}))

        factory.addStep(ShellCommand(name = "Building Manifest for site %s, BROKEN=%s" % (site, brk),
            command = ["make", "manifest"],
            haltOnFailure = True,
            env={'GLUON_BRANCH': 'nightly', 'GLUON_LANGS': 'de en'}))

        if brk == 1:
            factory.addStep(ShellCommand(name = "Upload BROKEN=1 for site %s" % site,
                    command = ["/usr/local/bin/ffmyk-upload.sh", site, 'BROKEN'],
                    haltOnFailure = True,
                    description = "Upload BROKEN=1 site %s" %site))
        else:
            factory.addStep(ShellCommand(name = "Upload BROKEN=0 for site %s" % site,
                command = ["/usr/local/bin/ffmyk-upload.sh", site, 'NORMAL'],
                haltOnFailure = True,
                description = "Upload BROKEN=0 site %s" %site ))

        factory.addStep(ShellCommand(name = "Cleanup Disk (site=%s, broken=%s)" % (site,brk),
            command = ["/usr/local/bin/ffmyk-cleanup.sh"],
            haltOnFailure = False,
            description = "Cleaning Disk"))

####### BUILDERS
from buildbot.config import BuilderConfig

c['builders'] = []
c['builders'].append(
    BuilderConfig(name="runtests",
      slavenames=["localhost"],
      factory=factory))

####### STATUS
c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz, auth

#**********

c['status'].append(html.WebStatus(http_port=8080, authz=authz_cfg))

####### IDENTITY
c['title'] = "Gluon-FFMYK"
c['titleURL'] = "https://freifunk-myk.de/"
c['buildbotURL'] = "http://build.ffmyk/buildbot/"

####### DB
c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
